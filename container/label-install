#!/bin/bash
# This is the install script for kvm when run in a privileged
# container.

CONTAINER=kvm-server
# ETC
MAINCONF=${CONTAINER}.conf
NETCONF=libvirt/qemu/networks/default_network.xml
QEMUCONF=libvirt/qemu.conf
# BIN
VIRTINSTALLDEMO=virt-install-demo.sh
MANAGE=${CONTAINER}-manage

# Check for read only root filesystem
is_read_only() {
   [[ -n $(awk '$2 ~ /\/host$/ && $4 ~ /(^|,)ro($|,)/' /host/proc/mounts) ]]
}

# Install/update scripts on the host 
BIN_INSTALL_PATH=$(is_read_only && echo "/host/usr/local/bin" || echo "/host/usr/bin")
SYSTEMD_INSTALL_PATH=$(is_read_only && echo "/host/usr/local/lib/systemd/system" || echo "/host/usr/lib/systemd/system")

install_common() {
   mkdir -p /host/etc/libvirt
   mkdir -p /host/var/lib/libvirt/images
   mkdir -p /host/etc/libvirt/qemu/networks
   mkdir -p ${SYSTEMD_INSTALL_PATH}
}

install_bin() {
   SCRIPT=$1
   cp -a /container/${SCRIPT} ${BIN_INSTALL_PATH}/
   # ensure the script is executable in bin dir
   chmod 755 ${BIN_INSTALL_PATH}/${SCRIPT}
}

# Install but don't update config files
install_config() {
   CONF=$1
   if [ ! -e /host/etc/${CONF} ]; then
      cp -a /container/$(basename ${CONF}) /host/etc/${CONF}
   else
      echo "/host/etc/${CONF} already exist, will not update it"
   fi
}

install_units() {
   cp -a /container/systemd/* ${SYSTEMD_INSTALL_PATH}/
}

## MAIN
echo "Running Install Label"
install_common
install_config ${MAINCONF}
install_config ${NETCONF}
install_config ${QEMUCONF}
install_bin ${VIRTINSTALLDEMO}
install_bin ${MANAGE}
install_units

# save the image path for the container that was used to run the install
# as the default container image to use for the libvirtd service. The
# image path to use should be available in the IMAGE environment variable.
INSTALL_IMAGE=${IMAGE}
source /host/etc/${MAINCONF}
# IMAGE is now exported from /host/etc/${MAINCONF} and potentially different
if [ "${INSTALL_IMAGE}" != "${IMAGE}" ]; then
   sed -i "s|^IMAGE=.*$|DEFAULT_IMAGE=${IMAGE}\nIMAGE=${INSTALL_IMAGE}|" host/etc/${MAINCONF}
fi

